{"version":3,"file":"static/js/115.7e14ff54.chunk.js","mappings":"4TAEMA,EAAM,mCAECC,EAAa,mCAAG,oGACLC,IAAAA,IAAA,qEACmCF,IAF9B,cACrBG,EADqB,yBAGpBA,EAAQC,KAAKC,SAHO,2CAAH,qDAMbC,EAAY,mCAAG,WAAMC,GAAN,uFACJL,IAAAA,IAAA,6CACkBK,EADlB,oBACgCP,EADhC,oBADI,cACpBG,EADoB,yBAInBA,EAAQC,MAJW,2CAAH,sDAOZI,EAAc,mCAAG,WAAMD,GAAN,uFACNL,IAAAA,IAAA,6CACkBK,EADlB,4BACwCP,EADxC,oBADM,cACtBG,EADsB,yBAIrBA,EAAQC,KAAKK,MAJQ,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,uFACTL,IAAAA,IAAA,6CACkBK,EADlB,4BACwCP,EADxC,2BADS,cACzBG,EADyB,yBAIxBA,EAAQC,KAAKC,SAJW,2CAAH,sDAOjBM,EAAgB,mCAAG,WAAMC,GAAN,uFACRV,IAAAA,IAAA,4DACiCF,EADjC,4DACwFY,IAFhF,cACxBT,EADwB,yBAIvBA,EAAQC,KAAKC,SAJU,2CAAH,uD,yFCG7B,UA7BA,WACE,OAAwCQ,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,UAgBhC,OAdAC,EAAAA,EAAAA,YAAU,WACO,OAAXF,IAGJR,EAAAA,EAAAA,IAAiBQ,GAAQG,KAAKP,KAC7B,CAACI,KAUF,4BACE,kBAAMI,SATW,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAQF,EAAMG,OAAOC,SAAST,OAAOO,MAC3CR,EAAgB,CAAEC,OAAQO,KAKxB,WACE,kBAAOG,KAAK,OAAOC,KAAK,YACxB,mBAAQD,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAYE,KAAMjB,S,qDCPxB,IApBA,YAA+B,IAATiB,EAAQ,EAARA,KACdC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,eAAIC,UAAU,WAAd,SACGH,EAAKI,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAO7B,EAAsB,EAAtBA,GAAI8B,EAAkB,EAAlBA,YACtB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAa/B,GAAMgC,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBAAKS,IAAG,UARF,mCAQE,OAAiBJ,GAAeK,IAAKN,KAC7C,uBAAIA,QAHC7B","sources":["Api/Api.jsx","components/Movies/Movies.jsx","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'd76d0790cc7bfcd2f7e0cb888f8ccbbc';\n\nexport const fetchTrending = async () => {\n  const respons = await axios.get(`\nhttps://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`);\n  return respons.data.results;\n};\n\nexport const fetchMovieID = async id => {\n  const respons = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=ru-Ru`\n  );\n  return respons.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const respons = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=ru-RU`\n  );\n  return respons.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const respons = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-En&page=1`\n  );\n  return respons.data.results;\n};\n\nexport const fetchMovieSearch = async query => {\n  const respons = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return respons.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'Api/Api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nfunction Movies() {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (search === null || '') {\n      return;\n    }\n    fetchMovieSearch(search).then(setSearchMovies);\n  }, [search]);\n\n  const handelSubmit = event => {\n    event.preventDefault();\n\n    const value = event.target.elements.search.value;\n    setSearchParams({ search: value });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handelSubmit}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">search</button>\n      </form>\n      <MoviesList film={searchMovies} />\n    </div>\n  );\n}\nexport default Movies;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MoviesList({ film }) {\n  const location = useLocation();\n\n  const URL_Image = 'https://image.tmdb.org/t/p/w300';\n\n  return (\n    <ul className=\"nav-item\">\n      {film.map(({ title, id, poster_path }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img src={`${URL_Image}${poster_path}`} alt={title} />\n              <p>{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n"],"names":["KEY","fetchTrending","axios","respons","data","results","fetchMovieID","id","fetchMovieCast","cast","fetchMovieReviews","fetchMovieSearch","query","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","search","get","useEffect","then","onSubmit","event","preventDefault","value","target","elements","type","name","film","location","useLocation","className","map","title","poster_path","to","state","from","src","alt"],"sourceRoot":""}